@page "/"
@using AntDesign

blc1

@code{

}


<!-- #region  teaching-->
@* 

<ErrorMsg errormsg=@errstr></ErrorMsg>


<Card Style="width: 95%;" BodyStyle="padding: 0; overflow: hidden;">
    <Flex Justify="space-between">
        <img alt="avatar" src="geometric-7719159.svg" style="display:block;width:50%;" />
        <Flex Vertical Align="flex-end" Justify="space-between" Style="padding: 32px;">
            <Title Level="3">
                “antd is an enterprise-class UI design language and React UI library.”
            </Title>
            <span>LoginStatetem:@LoginStatetem.ToString();Signed:@Signed.ToString()</span>
            @if (LoginStatetem == true)
            {
                @if (Signed == true)
                {
                    <span>
                        @name：到达时间 @SignLogTEM.Arrive ;
                        <Button @onclick="PersonExit" Type="@ButtonType.Primary">check out</Button>
                    </span>
                }
                else
                {
                    <Button @onclick="PersonArrived" Type="@ButtonType.Primary">check in</Button>
                }
            }
        </Flex>

                <Card Hoverable Title=@("二月") Style="width: 300px;margin:1%">
                    <p>樊志安 22/31</p>
                    <p>罗维 30/31</p>
                    <p>徐昌坤 8/31</p>
                </Card>
                <Card Hoverable Title=@("三月") Style="width: 300px;margin:1%">
                    <p>樊志安 26/30</p>
                    <p>罗维 30/30</p>
                    <p>徐昌坤 8/30</p>
                </Card>
    </Flex>

</Card>


@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject ProtectedSessionStorage ProtectedSessionStore
@inject IHttpClientFactory httpclientfactory

@code {


    string name = "樊志安";
    //int Personid=-2;
    bool Signed = false;
    string errstr = "";
    SignLog SignLogTEM { get; set; } = new();
    bool LoginStatetem = false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //逻辑模糊，当第一次渲染的时候，判断是否有tem日志
        if(firstRender){
            var logresult = await ProtectedSessionStore.GetAsync<SignLog>("SignLogTEM");
            if(logresult.Value != null){
                SignLogTEM=logresult.Value;
            }else{
                errstr+="SignLogTEM null";
                StateHasChanged();
                return;
            }
        }
        var result = await ProtectedSessionStore.GetAsync<bool>("LoginState");

        var holder=await ProtectedSessionStore.GetAsync<bool>("Signed");    
        Signed=holder.Value;

            

        //SignLogTEM.Arrive
        
        if (result.Success == true)
        {
            LoginStatetem = result.Value;
            
        }

        StateHasChanged();
        //=result.Success ? result.Value : "false";
        //return base.OnAfterRenderAsync(firstRender);
    }

    async Task PersonArrived()
    {
        Signed = true;

        //SignLogTEM.Id=DateTime.Now.Year+DateTime.Now.Month+DateTime.Now.Day;
        var result = await ProtectedSessionStore.GetAsync<int>("PersonId");
        if (result.Success == false)
        {
            //
            //Personid=;
            errstr += "GetPersonId Failed" + result.ToString() + result.Value;

            return;
        }

        SignLogTEM.PersonId = result.Value;
        SignLogTEM.Arrive = DateTime.Now;
        await ProtectedSessionStore.SetAsync("SignLogTEM", SignLogTEM);
        await ProtectedSessionStore.SetAsync("Signed", true);
        //2024/2/20 22:37:23
        StateHasChanged();
        //signlogtem.Exit=new DateTime(2023,12,8,16,30,00);
    }
    async Task PersonExit()
    {
        //Signed=true;
        //Exitalert=true;


        SignLogTEM.Exit = DateTime.Now;
        Controller.DaoController Dc = new(httpclientfactory);
        await Dc.AddOneAsync("SignLogs", SignLogTEM);
        await ProtectedSessionStore.SetAsync("Signed", false);
        SignLogTEM.Exit = new DateTime();
        SignLogTEM.Arrive = new DateTime();
        await ProtectedSessionStore.SetAsync("SignLogTEM", SignLogTEM);
        StateHasChanged();
    }

} *@

<!-- #endregion  teaching-->

<!-- #region -->


@* 
        <GridRow Gutter="450" Style="margin-top:0">

            <GridCol Span="8">


            </GridCol>
            <GridCol Span="8">


            </GridCol>
        </GridRow> *@


@* @inject String str
<h1>@str</h1>
src="shopping-8042865.svg"
*@

@* 
<Button @onclick="@(e=>{NavigationManager.NavigateTo("/Person");})">Back</Button>
<Button @onclick="@(e=>{NavigationManager.NavigateTo("/");})">Return home</Button> 
*@

@* @inject Controller.DaoController Dc *@
@* <button @onclick="PersonArrived" class="btn-primary">check in</button> *@

@*-----------
<button>Sign</button>
<button>Sign in</button> *@

@*
<Card Style="width: 75%;" BodyStyle="padding: 0; overflow: hidden;">
<Flex Justify="space-between">
<img alt="avatar"
src="shopping-8042865.svg"
style="width:50%;" />

<Flex Vertical Align="flex-end" Justify="space-between" Style="padding: 32px;">
<Title Level="3">
“antd is an enterprise-class UI design language and React UI library.”
</Title>


</Flex>
<Card Hoverable Title=@("二月") Style="width: 300px;">
<p>樊志安 22/31</p>
<p>罗维 30/31</p>
<p>徐昌坤 8/31</p>
</Card>
<Card Hoverable Title=@("三月") Style="width: 300px;">
<p>樊志安 26/30</p>
<p>罗维 30/30</p>
<p>徐昌坤 8/30</p>
</Card>
</Flex>


</span>

</Card> *@

@* <Space Direction="DirectionVHType.Vertical">
<SpaceItem>


</SpaceItem>
<SpaceItem>

</SpaceItem>
</Space> *@


@*


<Button @onclick="thank" Type="@ButtonType.Primary">Thank you</Button>
@using static Console
@code{
        void thank(){
            WriteLine(
                "THANK!"
                );
        }
    }

二月
樊志安 22/31
罗维 30/31
徐昌坤 8/31

三月
樊志安 26/30
罗维 30/30
徐昌坤 8/30

今天
樊志安 [已签到]
罗维 [Null]
徐昌坤 [NoPlan]
@* @using AntDesign.Charts
@using Title = AntDesign.Charts.Title *@

<!-- #endregion -->