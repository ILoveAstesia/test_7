@page "/"

<ErrorMsg errormsg=@errstr></ErrorMsg>
@* @inject String str
<h1>@str</h1> *@
二月
樊志安  22/31
罗维    30/31
徐昌坤  8/31

三月
樊志安  26/30
罗维    30/30
徐昌坤  8/30

今天
樊志安  [已签到]
罗维    [Null]
徐昌坤  [NoPlan]

<span>LoginStatetem:@LoginStatetem.ToString();
@if(LoginStatetem==true){
    @if(Signed==true){
        <span>
            @name：到达时间 @SignLogTEM.Arrive ;
            <button @onclick="PersonExit">check out</button>
        </span>
    }else{
        <button @onclick="PersonArrived">check in</button>
    }
}
</span>
@* <button @onclick="PersonArrived" class="btn-primary">check in</button> *@

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@* @inject Controller.DaoController Dc *@
@inject IHttpClientFactory httpclientfactory
@code{
    
    @* bool Exitalert=false; *@
    string name="樊志安";
    //int Personid=-2;
    bool Signed=false;
    string errstr="";
    SignLog SignLogTEM {get;set;}=new();
    bool LoginStatetem=false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var result=await ProtectedSessionStore.GetAsync<bool>("LoginState");
        if(result.Success==true){
            LoginStatetem=result.Value;
        }

        StateHasChanged();
        //=result.Success ? result.Value : "false";
        //return base.OnAfterRenderAsync(firstRender);
    }
    
     async Task PersonArrived(){
        Signed=true;
        
        //SignLogTEM.Id=DateTime.Now.Year+DateTime.Now.Month+DateTime.Now.Day;
        var result = await ProtectedSessionStore.GetAsync<int>("PersonId");
        if (result.Success == false)
        {
            //
            //Personid=;
            errstr+="GetPersonId Failed"+result.ToString()+result.Value;

            return;
        }

            SignLogTEM.PersonId=result.Value;
            SignLogTEM.Arrive=DateTime.Now;
        

        //2024/2/20 22:37:23
        
        //signlogtem.Exit=new DateTime(2023,12,8,16,30,00);
    }
    async Task  PersonExit(){
        //Signed=true;
        //Exitalert=true;
        Signed=false;
        SignLogTEM.Exit=DateTime.Now;
        Controller.DaoController Dc = new(httpclientfactory);
        await Dc.AddOneAsync("SignLogs",SignLogTEM);
        SignLogTEM.Exit=new DateTime(0);
        SignLogTEM.Arrive=new DateTime(0);
    }

}

@* 
<button>Sign</button>
<button>Sign in</button> *@