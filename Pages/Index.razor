@page "/"
@using Data
@inject WeatherForecastService ForecastService
@using test_7.Component
@using test_7.Model

<!-- #region -->
@* <ListComponent Name="FoodList!" Data="" ItemType="">

</ListComponent> *@


@* <ListComponent Name="Weather List" Data="forecasts" ItemType="WeatherForecast">
    <HeadTemplet>
        <th>Date</th>
        <th>Temp. (C)</th>
        <th>Temp. (F)</th>
        <th>Summary</th>
    </HeadTemplet>
    <RowTemplet>
        <td>@context.Date</td>
        <td>@context.TemperatureC</td>
        <td>@context.TemperatureF</td>
        <td>@context.Summary</td>
    </RowTemplet>
    <ContentTemplet>
    @displayPass
        
        @context
        @forecasts!.Count()
    </ContentTemplet>
</ListComponent> 

<RenderTest />
<PasswordEntry @bind-inerpassword=displayPass />
*@



@* 
<input type="text" @bind=Context @oninput=input />
<br>
@Context 
@code{
    String Context="What is Your Day?";
    void input(ChangeEventArgs e){
        Context=e.Value!.ToString()+",";
    }
*@

@* @if(DataList is null){
    <p>loading...</p>
}else{
@DataList;
} *@
<!-- #endregion -->

<input type="number" @bind=id>
<br>
<button @onclick=GetDataList class="primary" >GetData</button>
<br>
<button @onclick=GetAllDept class="secondary">RefreshDept</button>


<ListComponent Name="Department" ItemType="Department" Data="DataList">
<HeadTemplet>
    <th>Id</th>
    <th>Name</th>
</HeadTemplet>
<RowTemplet>
    <td>@context.Id</td>
    <td>@context.Name</td>
</RowTemplet>
<ContentTemplet>

    <p>TotalNumber:@DataList!.Count();</p>

</ContentTemplet>
</ListComponent>

@inject HttpClient HttpClient;
@inject NavigationManager NavigationManager;
@code {
    String? displayPass="未输入";
    int id ;
    List<Department>? DataList;
    async void GetDataList(){
        DataList=await HttpClient.GetFromJsonAsync<List<Department>>(NavigationManager.BaseUri + "Departments"+"/"+id);//+"?id="
        StateHasChanged();
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        GetAllDept();
        return  base.OnAfterRenderAsync(firstRender);
    }

    private async void GetAllDept(){
        DataList=await HttpClient.GetFromJsonAsync<List<Department>>(NavigationManager.BaseUri + "Departments/");
        StateHasChanged();
    }

    //persons = await HttpClient.GetFromJsonAsync<List<Person>>(NavigationManager.BaseUri + "persons"+"/"+"?id="+id);
    //await HttpClient.PostAsJsonAsync($"{NavigationManager.BaseUri}persons", person);
  
    @* 
    Department[]? DataArray;
    async void GetDataArray(){
        DataArray=await HttpClient.GetFromJsonAsync<Department[]?>(NavigationManager.BaseUri + "Departments"+"/"+"?id="+id);
        StateHasChanged();
    }
    private List<WeatherForecast>? forecasts;
    protected override async Task OnInitializedAsync()
    {
        //forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
    } 
    *@
}