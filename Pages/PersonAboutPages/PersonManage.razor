@page "/Person"
PersonPage
@* @inject string strurl *@
@* @using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration 
<h1>@Configuration["APIurl"]</h1> *@

<!-- #region list code for person-->

<ErrorMsg errormsg=@msg></ErrorMsg>

    select Person Property by Id:
<input type="number" @bind=SearchId>
<button @onclick="GetOwnDeptAsync" class="btn-primary">GetDeptData</button>
<button @onclick="GetOwnCourseOrDefault" class="btn-primary">GetCourseData</button>
<br>

@if(PersonDataList.Any()){
//Console.WriteLine("PersonListNotNull");
<div class="PersonLIst">

@code{
    //int Pnumber =0;
}
    <ListComponent Name="Persons" ItemType="Person" DataList="PersonDataList">

        <HeadTemplet>
            
            <th>OrderNumber</th>
            <th>Id</th>
            <th>Name</th>
            <th>Department</th>
            <th>Class</th>
            <th>Operation
                <button @onclick=GetAllPersonAsync class=" btn-success ">RefreshDept</button>
                @* <button @onclick=UpdateDepartment class="btn-secondary">Update</button> *@
                @* <button @onclick=DeleteDepartment class="btn-danger">Delete</button> *@
            </th>
            <br>

        </HeadTemplet>
        <RowTemplet>
            @{var Pnumber = context.GetHashCode();}
            <td>@Pnumber</td>
            <td>@context.Id</td>
        @if(true){
            <td>@context.Name</td>
        }else{
            @* <td><input @bind-value=@context.Name></td> *@
        }

            @{//这真的能用吗？取不到dept context.Departments.FirstOrDefault()
            
                string alldeptstr="类别：";
                if(context.Departments.Any()){
                    foreach(var item in context.Departments ){
                    alldeptstr+=item;
                    }
                }else{
                    alldeptstr+="空";
                }



            }
            <td>@alldeptstr</td>

            <td>
                @* @{
                    void select()
                    {

                        if (selectedIdList!.Contains(context.Id))
                        {
                            selectedIdList.Remove(context.Id);
                            return;
                        }
                        selectedIdList.Add(context.Id);
                    }//@onclick=select
                } *@
                <input type="checkbox"  />
            </td>

        </RowTemplet>
        <ContentTemplet>

            <p>TotalNumber:@PersonDataList!.Count();</p>

            <td><input type="number" @bind=tempPerson!.Id class=" input-group-text"></td>
            <td><input type="text" @bind=tempPerson.Name class=" input-group-text"></td>
            @* <td><input type="text" @bind=tempPerson.Departments class=" input-group-text"></td> *@
            <td><Button>add Person</Button></td>
            @* <button @onclick=addPerson disabled=@isSubmitting class=" btn-primary">Add a Person</button> *@
        </ContentTemplet>
    </ListComponent>
</div>


}else{
    <br>
<button @onclick=GetAllPersonAsync class=" btn-success ">GetAllPerson</button>
}

<!-- #endregion -->
@inject NavigationManager NavigationManager;
<!-- person code-->
@using Controller;

@inject IHttpClientFactory _httpClient;

@code{
    string msg="";
    DaoController? Dc;
    @* PersonManage(){
        Dc=new(_httpClient);
    } *@
    int SearchId=0;
    List<Person> PersonDataList=[];
    Person tempPerson=new();
    @* string? text ="" ;
    protected override void OnInitialized(){
        text=Configuration["APIurl"];
        if(text is null){
            return;
        } 
        httpclient.BaseAddress=new Uri(text);
    } *@

    //private readonly IHttpClientFactory _httpClient;
    @* public static HttpClient httpclient =new()
    {
        BaseAddress=new Uri("http://localhost:5198/"),
    }; *@
    
    async Task GetAllPersonAsync()
    {
        Dc=new(_httpClient);
        var a = await Dc.GetAllAsync<Person>("Persons");
        if (a is null)
        {
            Console.WriteLine("cant get datalist all,may time out or null database;");
            return;
        }
        PersonDataList = a;
        StateHasChanged();
    }

    void GetOwnDeptAsync(){
        @* DeptDataList=await Dc.GetOwnPropertyAsync<Department>("Persons/Departments/",SearchId);
          SearchId=0; 
          *@
          if(SearchId==0){
            msg+="null dept";
            StateHasChanged();
            return;
            //NavigationManager.NavigateTo("/");
          }
        NavigationManager.NavigateTo("/departmentPage/"+SearchId);
    }
    List<Course>? CourseDataList =[];
    void GetOwnCourseOrDefault(){
        
            //string[] ;
            //public string[] paramstr => Serialize(CourseDataList);

            NavigationManager.NavigateTo("/StudentCourse/"+SearchId);
            SearchId=0;
            // return;
            //https://stackoverflow.com/questions/65644327/how-to-pass-a-list-as-a-parameter-to-blazor-page
            //https://blog.csdn.net/WarGames_dc/article/details/106213300
    }


    
}

