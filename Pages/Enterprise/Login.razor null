@page "/Login"
@inject IMessageService _message

@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;

<Card>

<Form Loading="loading" Model="@model" 
      LabelColSpan="8"
      WrapperColSpan="16"
      OnFinish="OnFinish" 
      OnFinishFailed="OnFinishFailed">
    <FormItem Label="Username" >
        <Input @bind-Value="@context.Username"/>
    </FormItem>
    <FormItem Label="Password">
        <InputPassword @bind-Value="@context.Password" />
    </FormItem>
    <FormItem WrapperColOffset="8" WrapperColSpan="16">
        <Checkbox @bind-Value="context.RememberMe">Remember me</Checkbox>
    </FormItem>
    <FormItem WrapperColOffset="8" WrapperColSpan="16">
        <Button Type="@ButtonType.Primary" HtmlType="submit">
            Submit
        </Button>
    </FormItem>
</Form>
</Card>
<div style="margin-top: 16px">
    Loading stateï¼š
    <Switch Checked=loading OnChange=toggle />
</div>
@code
{
    public class Model
    {
        [Required]
        public string? Username { get; set; }
        [Required]
        public string? Password { get; set; }
        public bool RememberMe { get; set; } = true;
    }

    private Model model = new Model();

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(model)}");
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(model)}");
    }

    bool loading = false;

    void toggle(bool value) => loading = value;
}


<Button Type="primary" OnClick="OnClick">
    Display normal message
</Button>


@code{
    private async Task OnClick()
    {
        string key = $"updatable-{DateTime.Now.Ticks}";
        var config = new MessageConfig()
        {
            Content = "Loading...",
            Key = key
        };
        await _message.Loading(config);

        await Task.Delay(2000);

        config.Content = "Loaded";
        config.Duration = 2;
        await _message.Success(config);
    }
}