@page "/EmployeePage";

@using ehrms.Model
@using System.ComponentModel
@using AntDesign.TableModels
@* @using AntDesign *@
       @*  *@

<br />
<p>目前是第 @_pageIndex 页 | 目前分页大小为: @_pageSize | 查询到 @_total 条数据 </p>

<Input Placeholder="请输入ID" @bind-Value="@idstr"  Style="width: 20%;" />

@* <Button OnClick="()=> { await GetById(); }">搜索</Button> *@
<Button OnClick=GetById>搜索</Button>
<Button OnClick=OnInitializedAsync Type="danger">刷新</Button>
<Button OnClick="@ShowModal" Type="@ButtonType.Primary">添加</Button>
<Button OnClick="()=> { _pageIndex--; }">上一页</Button>
<Button OnClick="()=> { _pageIndex++; }">下一页</Button>
<br />

@* <Button Type="primary" OnClick="@ShowModal">
    Open Modal with customized footer
</Button> *@
@{
    RenderFragment footer = @<Template>
    <Button OnClick="@HandleOk" @key="@( "submit" )"
            Type="primary"
            Loading="@_loading">
        提交
    </Button>
    <Button OnClick="@HandleCancel" @key="@( "back" )">返回</Button>
</Template>;
}

<Modal Title="@title"
       Visible="@_visible"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel"
       Footer="@footer">

编号：
<Input @bind-Value=titem.Id />
名称
<Input @bind-Value=titem.Name />
性别
<Input @bind-Value=titem.Gender/>
密码
<Input @bind-Value=titem.Password />
权限
<Input @bind-Value=titem.Level_right />

</Modal>


@code{
    ehrms.Model.Employee titem = new();
    string title="添加";
    bool _visible = false;
    bool _loading = false;
    private void ShowModal()
    {
        
        _visible = true;
    }

    private void HandleOk(MouseEventArgs e)
    {
        _loading = true;
        //await Task.Delay(3000);
        @* if(EmployeeList is null)
        {
          EmployeeList=new();
          HandleCancel(e);
        return;} *@

        var result = EmployeeList!.Where(p => p.Id == titem.Id).FirstOrDefault();
        if (result is not null){
          //return;
        EmployeeList!.Remove(result);
        } 
       
        
        _visible = false;
        @* EmployeeList.Remove(titem); *@
        @* ehrms.Model.Employee copy =new ehrms.Model.Employee(titem) ; *@
        EmployeeList!.Add(titem);
        titem = new();
        _loading = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        _visible = false;
    }
}



<Table  @ref="table"
        TItem="ehrms.Model.Employee"
        DataSource="@EmployeeList"
        @bind-PageIndex="_pageIndex"
        @bind-PageSize="_pageSize"
        @bind-SelectedRows="selectedRows"
        OnChange="OnChange"
        Size="TableSize.Small"
        RowKey="x=>x.Id"
      >
    <Selection Key="@(context.Id.ToString())" />
    <PropertyColumn Property="c=>c.Id" Sortable Title="员工工号" />
    <PropertyColumn Property="c=>c.Name"  Sortable Title="员工姓名"/>
    <PropertyColumn Property="c=>c.Level_right"  Sortable Title="职位等级"/>
    <PropertyColumn Property="c=>c.Gender"  Sortable Title="员工性别"/>
    <ActionColumn Title="操作">
    <Space>
      @* <SpaceItem><Button Danger OnClick="()=>Delete(context.Id)">Delete</Button></SpaceItem> *@
      @* <SpaceItem><Button Danger OnClick="()=>Delete(context.Id)">删除</Button></SpaceItem> *@
      <SpaceItem><Button Danger OnClick="()=>Delete(context.Id)">删除</Button></SpaceItem>
      <SpaceItem><Button OnClick="()=>Update(context.Id)" >更改</Button></SpaceItem>
    </Space>
  </ActionColumn>

</Table>

@code{
  void Update(int id){
    if(EmployeeList is null)
    {return;}
    var result = EmployeeList.Where(p => p.Id == id).FirstOrDefault();
    if (result is null){
      return;
    }
    titem = result;
    ShowModal();
    //EmployeeList.Remove(result);
  }
}


<br />
<h5>选择列表:</h5>
@if (selectedRows != null && selectedRows.Any())
{

  <Button Danger Size="small" OnClick="@(e => { selectedRows = null; })">Clear</Button>

  @foreach (var selected in selectedRows)
  {
    <Tag @key="selected.Id" Closable OnClose="e=>RemoveSelection(selected.Id)" >@selected.Id - @selected.Name</Tag>
  }

}


@using System.Text.Json;
@code{
  void RemoveSelection(int id){
    var selected = selectedRows!.Where(x => x.Id != id);
    selectedRows = selected;
  }
  void Delete(int id){
    if(EmployeeList is null)
    {return;}
    var result = EmployeeList.Where(p => p.Id == id).FirstOrDefault();
    if (result is null){
      return;
    }
    EmployeeList.Remove(result);
      //StateHasChanged();
  }
  int _pageIndex = 1;
  int _pageSize = 5;
  int _total = 0;
  IEnumerable<ehrms.Model.Employee>? selectedRows;
  ITable? table;
  public void OnChange(QueryModel<ehrms.Model.Employee> queryModel)
  {
    //调试用
    //Console.WriteLine(JsonSerializer.Serialize(queryModel));
  }

}

@inject IHttpClientFactory client

@code{

    List<ehrms.Model.Employee>? EmployeeList;
    Controller.DaoController? Dc;


  protected override async Task OnInitializedAsync()
  {
    EmployeeList = await GetAll();
    if(EmployeeList is null)
    {
    Console.WriteLine("list is null");
    }else{
    _total = EmployeeList.Count();
    }
  }

    @* protected override async Task OnAfterRenderAsync(bool firstRender){
        if(firstRender){
            EmployeeList = await GetAll();
            Console.WriteLine("first emp");
        }
        StateHasChanged();
        //return base.OnAfterRenderAsync(firstRender);
    } *@

    async Task<List<ehrms.Model.Employee>?> GetAll(){
        Dc = new(client);
        var result = await Dc.GetAllAsync<ehrms.Model.Employee>("Employees");
            //Thread.Sleep(3000);//测试异步加载
        return result;
        //return 
    }

    string? idstr { get; set; }

    async Task<List<ehrms.Model.Employee>?> GetById()
    { 
        if(idstr is null){
          return null;
        }
        Dc=new(client);
        List<ehrms.Model.Employee>? tlist = [];
        var result = await Dc.GetByIdAsync<ehrms.Model.Employee>("Employees",idstr); 
        if(result is null){
          return null;
        }
        tlist.Add(result);
        EmployeeList=tlist;
        StateHasChanged(); 
        return tlist;
        

    }
}