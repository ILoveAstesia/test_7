 @typeparam ItemType

<PageTitle>@Name</PageTitle>

<h1>@Name</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (DataList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">

        <thead>
            <tr>
                @HeadTemplet
            </tr>
        </thead>

        <tbody>
            @if(RowTemplet is not null){
                @foreach (var item in DataList)
                {
                    <tr>
                        @RowTemplet(item)
                    </tr>
                }
            }else{
                <p>Null</p>
            }

        </tbody>

        <tfoot>
            @if(ContentTemplet is not null){
                @ContentTemplet(DataList.Count().ToString())
            }else{
                <span>Null Content</span>
            }
            
        </tfoot>
        
    </table>
}

@code {
    //[Parameter] public List<int> selectedIdList;
    //public IEnumerable<ItemType>? forcasts;
    [Parameter] public List<ItemType>? DataList { get; set; }
    [Parameter] public String Name { get; set; } = "NoName";

    [Parameter] public RenderFragment<String>? ContentTemplet { get; set; }
    [Parameter] public RenderFragment<ItemType>? RowTemplet { get; set; }
    [Parameter] public RenderFragment? HeadTemplet { get; set; }
    @* protected override void OnAfterRender(bool firstRender)
    {
    if (firstRender)
    {
    //System.Threading.Thread.Sleep(300);
    forcasts = Data;
    StateHasChanged();

    }
} *@

}
